let taskArray = [];
let dateArray = [];
let rawDateArray = [];
let projectArray = [];

export default class CreateToDoTask {
    constructor(task) {
      this.task = task;
    }
    
    createTaskArray () {
      let newTaskArray = [];
      taskArray.push(newTaskArray);
    }


    addTaskToArray(projectIndexValue, task) {
      taskArray[projectIndexValue].push(task);
    }
    
    modifyTaskArray(projectIndexValue, taskLocation, newTask) {
      taskArray[projectIndexValue][taskLocation] = newTask;
    }


    returnTaskValue(projectIndex, taskLocation) {
      return taskArray[projectIndex][taskLocation];
    }


    showTaskArrayLength(projectIndex) {
      let projectTaskArrayLength = taskArray[projectIndex];
      return projectTaskArrayLength.length;
    }

    createDateArray() {
      let newDateArray = [];
      dateArray.push(newDateArray);
    }

    addDateToArray(projectIndexValue, date) {
      dateArray[projectIndexValue].push(date);
    }

    modifyDateArray(projectIndexValue, dateLocation, newDatevalue) {
      dateArray[projectIndexValue][dateLocation] = newDatevalue;
    } 


    returnDateValue(projectIndex, dateLocation) {
      return dateArray[projectIndex][dateLocation];
    }
    
    createRawDateArray() {
      let newRawDateArray = [];
      rawDateArray.push(newRawDateArray);
    }

    addRawDateToArray(projectIndexValue, rawDate) { 
      rawDateArray[projectIndexValue].push(rawDate);
    }

    returnRawDateValue(projectIndex, rawDateLocation) {
      return rawDateArray[projectIndex][rawDateLocation];
    }

    removeTaskAndDateFromArray(projectArrayLocation, projectIndex) {
      taskArray[projectArrayLocation].splice(projectIndex, 1);
      dateArray[projectArrayLocation].splice(projectIndex, 1);
    }

    addProjectNameToArray(projectName) {
      projectArray.push(projectName);
    }

    showProjectNameArray() {
      return console.log(projectArray);
    }

    renderProjectName(newProjectName) {
      let projectNameArrayLength = projectArray.length;
      let projectList = document.querySelector(".projects-list");
      projectList.innerHTML = "";

      for (let i = 0; i < projectNameArrayLength; i++) {
        let projectName = document.createElement("span");

        projectName.innerHTML = `
        <span class="${i} project-names">${newProjectName}</span>
        `

        projectName.dataset.index = i;

        projectList.appendChild(projectName);
      }
    }
    

    renderToDoTask(projectIndex, taskLength) {
      let taskArrayLength = taskLength;
      for(let i = 0; i < taskArrayLength; i++) {
        let projectTasksContainer = document.querySelector(".project-tasks-container");
        let taskInfosContainer = document.createElement("div");
        taskInfosContainer.className = "task-infos-container";
        let taskElement = document.createElement("span");
        let dateInput = document.createElement("span")
        let editIcon = document.createElement("span");
        let deleteIcon = document.createElement("span");

        taskInfosContainer.innerHTML = `<div class="task-infos-container"></div>`
        taskElement.innerHTML = `<span class="project-task">${taskArray[projectIndex][i]}</span>`
        dateInput.innerHTML = `<span class="project-task"> ${dateArray[projectIndex][i]}</span>`

        editIcon.innerHTML = `<span class="material-symbols-outlined task-edit-icon">edit</span>`
        deleteIcon.innerHTML = `<span class="material-symbols-outlined trash-icon">delete</span>`

        taskInfosContainer.dataset.index = i;
        
        taskInfosContainer.appendChild(taskElement);
        taskInfosContainer.appendChild(dateInput);
        taskInfosContainer.appendChild(editIcon);
        taskInfosContainer.appendChild(deleteIcon);

        projectTasksContainer.appendChild(taskInfosContainer);
      }
    }
 
  }